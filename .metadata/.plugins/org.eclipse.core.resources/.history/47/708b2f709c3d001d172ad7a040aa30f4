package com.MphApp.MphCerti.Helper;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.web.multipart.MultipartFile;

import com.MphApp.MphCerti.entity.ExcelDump;

public class ExcelHelper {
	
	public static boolean checkExcelFormat(MultipartFile file) {
		
		String contentType = file.getContentType();
		
		String Type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
		
		if(contentType.equals(Type)) {
			return true;
		}
		else {
			return false;
		}
	}

	private String name;
	
	public List<ExcelDump> convertExceltoList(InputStream is){
		List<ExcelDump> list = new ArrayList<>();
		
		try {
			XSSFWorkbook workbook = new XSSFWorkbook(is);
			
			XSSFSheet sheet = workbook.getSheet("data");
			
			int rowNumber = 0;
			Iterator<Row> iterator = sheet.iterator();
			
			while(iterator.hasNext()) {
				Row row = iterator.next();
				
				if(rowNumber == 0) {
					rowNumber++;
					continue;
				}
				
				Iterator<Cell> cells = row.iterator();
				
				int cid=0;
				
				ExcelDump ed =  new ExcelDump();
				
				while(cells.hasNext()) {
					Cell cell = cells.next();
					
					switch (cid) {
					case 0:
						ed.setDate((String)cell.getStringCellValue());
						break;
					case 1:
						ed.setEmployee_Number((int)cell.getNumericCellValue());
						break;
					case 2:
						ed.setEmployee_Name((String)cell.getStringCellValue());
						break;
					case 3:
						ed.setDate_Of_Joining((String)cell.getStringCellValue());
						break;
					case 4:
						ed.setLocation((String)cell.getStringCellValue());
						break;
					case 5:
						ed.setPos_Loc_Name((String)cell.getStringCellValue());
						break;
					case 6:
						ed.setLocation_Type((String)cell.getStringCellValue());
						break;
					case 7:
						ed.setPos_Loc_Type((String)cell.getStringCellValue());
						break;
					case 8:
						ed.setEmployee_Type((String)cell.getCellFormula());
						break;
					case 9:
						ed.setRole_Desc((String)cell.getStringCellValue());
						break;
					case 10:
						ed.setWork_Allocation((int)cell.getNumericCellValue());
						break;
					case 11:
						ed.setBill_Allocation((int)cell.getNumericCellValue());
						break;
					case 12:
						ed.setBilling_Type_Role((String)cell.getStringCellValue());
						break;
					case 13:
						ed.setGrade_Desc((String)cell.getStringCellValue());
						break;
					case 14:
						ed.setProject_Role((String)cell.getStringCellValue());
						break;
					case 15:
						ed.setEnd_Client_Id((int)cell.getNumericCellValue());
						break;
					case 16:
						ed.setEnd_Client_Name((String)cell.getStringCellValue());
						break;
					case 17:
						ed.setEnd_Client_Group((int)cell.getNumericCellValue());
						break;
					case 18:
						ed.setEnd_Client_Group_Name((String)cell.getStringCellValue());
						break;
					case 19:
						ed.setMarketing_Unit((String)cell.getStringCellValue());
						break;
					case 20:
						ed.setSub_Marketing_Unit((String)cell.getStringCellValue());
						break;
					case 21:
						ed.setChannel((String)cell.getStringCellValue());
						break;
					case 22:
						ed.setBussiness_Organization((String)cell.getStringCellValue());
						break;
					case 23:
						ed.setService_type((String)cell.getStringCellValue());
						break;
					case 24:
						ed.setDelivery_Unit((String)cell.getStringCellValue());
						break;
					case 25:
						ed.setProject_Type((String)cell.getStringCellValue());
						break;
					case 26:
						ed.setProject_Bill_Flag((String)cell.getStringCellValue());
						break;
					case 27:
						ed.setProject_Billing_Category((String)cell.getStringCellValue());
						break;
					case 28:
						ed.setDM_Employee_Number((int)cell.getNumericCellValue());
						break;
					case 29:
						ed.setDm_Employee_Name((String)cell.getStringCellValue());
					
					
					
					
					
					
					}				
			
				}
				
			}
			
			
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		finally {
			
		}
		return list;
	}
}
