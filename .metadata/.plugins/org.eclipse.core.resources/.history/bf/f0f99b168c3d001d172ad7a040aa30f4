package com.MphApp.MphCerti.Helper;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.web.multipart.MultipartFile;

import com.MphApp.MphCerti.entity.ExcelDump;

public class ExcelHelper {
	
	public static boolean checkExcelFormat(MultipartFile file) {
		
		String contentType = file.getContentType();
		
		String Type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
		
		if(contentType.equals(Type)) {
			return true;
		}
		else {
			return false;
		}
	}

	private String name;
	
	public List<ExcelDump> convertExceltoList(InputStream is){
		List<ExcelDump> list = new ArrayList<>();
		
		try {
			XSSFWorkbook workbook = new XSSFWorkbook(is);
			
			XSSFSheet sheet = workbook.getSheet("data");
			
			int rowNumber = 0;
			Iterator<Row> iterator = sheet.iterator();
			
			while(iterator.hasNext()) {
				Row row = iterator.next();
				
				if(rowNumber == 0) {
					rowNumber++;
					continue;
				}
				
				Iterator<Cell> cells = row.iterator();
				
				int cid=0;
				
				ExcelDump exceldump =  new ExcelDump();
				
				while(cells.hasNext()) {
					Cell cell = cells.next();
					
					switch (cid) {
					case 0:
						exceldump.setDate((String)cell.getStringCellValue());
					
					case 1:
						exceldump.setEmployee_Number((int)cell.getNumericCellValue());
					
					case 2:
						exceldump.setEmployee_Name((String)cell.getStringCellValue());
					}
				}
				
			}
			
			
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		finally {
			
		}
		return list;
	}
}
